manifest {

  author = 'Stephen Kazakoff'
  homePage = 'https://github.com/ampatchlab/nf-rnasnv'
  description = 'RNA-Seq variant calling nextflow pipeline'
  version = '1.0'
}

params {

  csv = null
  paired_end = false
  rgid_sep = '.'

  // Reference genome params
  genome = 'GRCh38'

  genomes {
    'GRCh38' {
      fasta = 'ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_32/GRCh38.primary_assembly.genome.fa.gz'
      gtf   = 'ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_32/gencode.v32.primary_assembly.annotation.gtf.gz'
    }
    'GRCm38' {
      fasta = 'ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz'
      gtf   = 'ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.primary_assembly.annotation.gtf.gz'
    }
  }

  // Sequencing adapter params
  adapters = 'TruSeq'

  seq_adapters {
    'TruSeq' {
      r1 = 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'
      r2 = 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'
    }
    'BGISeq' {
      r1 = 'AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA'
      r2 = 'AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG'
    }
    'NONE' {
      r1 = 'NO_R1_ADAPTER'
      r2 = 'NO_R2_ADAPTER'
    }
  }

  // STAR genome generate params
  star_genome_chr_bin_n_bits = 18
  star_genome_sa_index_n_bases = 14
  star_sjdb_overhang = 100

  // Cutadapt params
  cutadapt_base_qual_cutoff = 20
  cutadapt_min_read_length = 20

  // BCFtools mpileup params
  mpileup_num_regions = 10000
  mpileup_suffix_length = 5
  mpileup_max_depth = 20000
  mpileup_min_bq = 13

  // BCFtools mpileup filters
  mpileup_exclude_filters {
    LOW_QUAL = 'QUAL<10'
    LOW_DP = 'FORMAT/DP<10'
    LOW_GQ = 'FORMAT/GQ<15'
    VD_BIAS = 'INFO/VDB<=0.05' // variant distance bias
    RP_BIAS = 'INFO/RPB<=0.05' // read position bias
    BQ_BIAS = 'INFO/BQB<=0.05' // base quality bias
  }

  mpileup_include_filters = null

  // Ensembl VEP params
  vep_cache_type = null

  vep_cache_types = ['refseq', 'merged']

  vep_cache_info {
    'GRCh38' {
      species = 'homo_sapiens'
    }
    'GRCm38' {
      species = 'mus_musculus'
    }
  }

  vep_indexed_cache_files {
    'GRCh38' {
      'ensembl' {
        cache = 'ftp://ftp.ensembl.org/pub/release-97/variation/indexed_vep_cache/homo_sapiens_vep_97_GRCh38.tar.gz'
      }
      'refseq' {
        cache = 'ftp://ftp.ensembl.org/pub/release-97/variation/indexed_vep_cache/homo_sapiens_refseq_vep_97_GRCh38.tar.gz'
      }
      'merged' {
        cache = 'ftp://ftp.ensembl.org/pub/release-97/variation/indexed_vep_cache/homo_sapiens_merged_vep_97_GRCh38.tar.gz'
      }
    }
    'GRCm38' {
      'ensembl' {
        cache = 'ftp://ftp.ensembl.org/pub/release-97/variation/indexed_vep_cache/mus_musculus_vep_97_GRCm38.tar.gz'
      }
      'refseq' {
        cache = 'ftp://ftp.ensembl.org/pub/release-97/variation/indexed_vep_cache/mus_musculus_refseq_vep_97_GRCm38.tar.gz'
      }
      'merged' {
        cache = 'ftp://ftp.ensembl.org/pub/release-97/variation/indexed_vep_cache/mus_musculus_merged_vep_97_GRCm38.tar.gz'
      }
    }
  }

  // MultiQC params
  multiqc_config = "${baseDir}/assets/multiqc_config.yaml"

  // output params
  outdir = './results'
  refdir = './reference'

  // report params
  execution_report = './reports/execution_report.html'
  trace_report = './reports/trace_report.txt'
  timeline_report = './reports/timeline_report.html'
  flowchart = './reports/flowchart.png'

  // AWS Batch options
  aws_queue = false
  aws_region = false

  // standard options
  advanced = false
  help = false
  version = false
}

process {

  shell = ['/bin/bash', '-euo', 'pipefail']
}

report {

  enabled = true
  file = params.execution_report
}

trace {

  enabled = true
  file = params.trace_report
}

timeline {

  enabled = true
  file = params.timeline_report
}

dag {

  enabled = true
  file = params.flowchart
}

includeConfig 'conf/base.config'

profiles {

  'awsbatch' {
    includeConfig 'conf/containers.config'
    includeConfig 'conf/awsbatch.config'
  }

  'conda' {
    includeConfig 'conf/conda.config'
  }

  'docker' {
    includeConfig 'conf/containers.config'
    docker.enabled = true
  }

  'singularity' {
    includeConfig 'conf/containers.config'
    singularity.enabled = true
  }

  // institute configs

  'qimrb' {
    includeConfig 'conf/qimrb.config'
  }

  // test configs

  'HBR_UHR_ERCC-SE' {
    includeConfig 'tests/HBR_UHR_ERCC-SE.config'
  }

  'HBR_UHR_ERCC-PE' {
    includeConfig 'tests/HBR_UHR_ERCC-PE.config'
  }

  'HCC1395-SE' {
    includeConfig 'tests/HCC1395-SE.config'
  }

  'HCC1395-PE' {
    includeConfig 'tests/HCC1395-PE.config'
  }
}

def max_cpus(cpus) {
    return cpus > params.max_cpus ? params.max_cpus : cpus
}

def max_memory(memory) {
    return memory > params.max_memory ? params.max_memory : memory
}

def max_time(time) {
    return time > params.max_time ? params.max_time : time
}
